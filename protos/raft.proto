syntax = "proto3";

message Void {
}

message RequestVoteRequest {
    uint32 term = 1;
    string candidateId = 2;
    int64 lastLogIndex = 3;
    uint32 lastLogTerm = 4;
}

message RequestVoteReply {
    string from = 1;
    uint32 term = 2;
    uint32 voteGranted = 3;
}

message AppendEntriesRequest {
    uint32 term = 1;
    string leaderId = 2;
    int64 prevLogIndex = 3;
    uint32 prevLogTerm = 4;
    repeated uint32 entries_term = 5;
    repeated bytes entries = 6;
    int64 leaderCommit = 7;
}

message AppendEntriesReply {
    string from = 1;
    uint32 term = 2;
    uint32 success = 3;
    int64 lastAgreedIndex = 4;
}

// One-way RPC

service Raft {
    rpc RequestVote (RequestVoteRequest) returns (Void) {
    }
    rpc OnRequestVote (RequestVoteReply) returns (Void) {
    }
    rpc AppendEntries (AppendEntriesRequest) returns (Void) {
    }
    rpc OnAppendEntries (AppendEntriesReply) returns (Void) {
    }
}

message AppendLogRequest {
    repeated string log = 1;
}
message AppendLogReply {
}
message RequestLogRequest {
}
message RequestLogReply {
    string role = 1;
    int64 commitIndex = 2;
    repeated string logs = 3;
}

service Control {
    rpc AppendLog (AppendLogRequest) returns (AppendLogReply) {
    }
    rpc RequestLog (RequestLogRequest) returns (RequestLogReply) {
    }
    rpc Shutdown (Void) returns (Void) {
    }
    rpc Alive (Void) returns (Void) {
    }
    rpc Offline (Void) returns (Void) {
    }
    rpc Online (Void) returns (Void) {
    }
}
