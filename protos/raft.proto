syntax = "proto3";

message Void {}

message RequestVoteRequest {
    uint32 term = 1;
    string candidateId = 2;
    uint32 lastLogIndex = 3;
    uint32 lastLogTerm = 4;
}

message RequestVoteReply {
    string from = 1;
    uint32 term = 2;
    uint32 voteGranted = 3;
}

message AppendEntriesRequest {
    uint32 term = 1;
    string leaderId = 2;
    uint32 prevLogIndex = 3;
    uint32 prevLogTerm = 4;
    bytes entries = 5;
    uint32 leaderCommit = 6;
}

message AppendEntriesReply {
    string from = 1;
    uint32 term = 2;
    uint32 success = 3;
    uint32 lastAgreedIndex = 4;
}

// One-way RPC

service Raft {
    rpc RequestVote (RequestVoteRequest) returns (Void) {}
    rpc OnRequestVote (RequestVoteReply) returns (Void) {}
    rpc AppendEntries (AppendEntriesRequest) returns (Void) {}
    rpc OnAppendEntries (AppendEntriesReply) returns (Void) {}
}

message AppendLogRequest {}
message AppendLogReply {}
message RequestLogRequest {}
message RequestLogReply {}

service Client {
    rpc AppendLog (AppendLogRequest) returns (AppendLogReply) {}
    rpc RequestLog (RequestLogRequest) returns (RequestLogReply) {}
}
